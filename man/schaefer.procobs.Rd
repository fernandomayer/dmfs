% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/schaefer.procobs.R
\name{schaefer.procobs}
\alias{schaefer.procobs}
\title{Negative log-likelihood function for the Schaefer model}
\usage{
schaefer.procobs(par, B, I, C)
}
\arguments{
\item{par}{A (named) vector with starting values of parameters:
\code{r}, \code{K}, \code{q}, \code{sigmaproc} (process standard
deviation), \code{sigmaobs} (observation standard deviation).}

\item{B}{A vector of biomass estimates calculated based on the
initial parameters.}

\item{I}{A vector of observed CPUE values.}

\item{C}{A vector of observed catch values.}
}
\value{
The negative log-likelihood value for a given set of
    parameters and data.
}
\description{
Negative log-likelihood function for the Schaefer model with both
process and observation errors.
}
\details{
This function calculates the negative log-likelihood for the
    Schaefer model, considering multiplicative log-normal errors for
    the process and observation equation.

The function is suited for use in \code{optim()}, \code{nlminb()},
    or \code{bbmle::mle2()} (with minor modifications). The
    minimization will be made in the sum of both likelihhods.
}
\examples{
## Simulate data
set.seed(123)
sim <- simdata()
plot(sim)

## See parameters used (same as default here)
(pars <- attr(sim, "pars")[-1])

## Generate initial biomass values with this set of parameters
Bobs <- schaefer.gen(r = pars["r"], K = pars["K"],
                     C = sim$C, sigmaproc = pars["sd.proc"])
plot(Bobs, type = "l")
points(sim$I.procobs/pars["q"])

## See the nll at this point
schaefer.procobs(par = pars, B = Bobs,
                 I = sim$I.procobs, C = sim$C)

## Minimize nll with nlminb
fit <- nlminb(start = pars,
              objective = schaefer.procobs,
              B = Bobs,
              I = sim$I.procobs, C = sim$C,
              control = list(eval.max = 1000, iter.max = 1000),
              lower = 0, upper = Inf)
fit$par
format(fit$par, digits = 4, scientific = FALSE)

## Using bbmle
\dontrun{
library(bbmle)
parnames(schaefer.procobs) <- names(pars)
fit.mle <- mle2(
    schaefer.procobs,
    start = pars,
    data = list(B = Bobs, I = sim$I.procobs, C = sim$C),
    optimizer = "nlminb",
    control = list(eval.max = 1000, iter.max = 1000, trace = 1),
    lower = c(r = 0, K = 0, q = 0, sigmaproc = 0, sigmaobs = 0),
    upper = c(r = Inf, K = Inf, q = Inf,
              sigmaproc = Inf, sigmaobs = Inf)
)
fit.mle
summary(fit.mle)

## Comparing
format(fit$par, digits = 4, scientific = FALSE)
format(fit.mle@coef, digits = 4, scientific = FALSE)

## Use bbmle profile
prof <- profile(fit.mle)
confint(prof)
plot(prof)
}
}
\author{
Fernando Mayer
}
